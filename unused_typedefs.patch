diff --git a/include/stlsoft/conversion/sap_cast.hpp b/include/stlsoft/conversion/sap_cast.hpp
index 15c58a0..d32f2ad 100644
--- a/include/stlsoft/conversion/sap_cast.hpp
+++ b/include/stlsoft/conversion/sap_cast.hpp
@@ -142,9 +142,6 @@ inline TO sap_cast(FROM from)
     STLSOFT_STATIC_ASSERT(0 != base_type_traits<FROM>::is_pointer);
     STLSOFT_STATIC_ASSERT(0 != base_type_traits<TO>::is_pointer);
 
-    typedef ss_typename_type_k base_type_traits<FROM>::base_type    from_base_type;
-    typedef ss_typename_type_k base_type_traits<TO>::base_type      to_base_type;
-
     // The intermediate type might be void *, void const*, void volatile * or
     // void const volatile *
     typedef ss_typename_type_k select_first_type_if<void const*
diff --git a/include/stlsoft/string/copy_functions.hpp b/include/stlsoft/string/copy_functions.hpp
index d0105c2..b474262 100644
--- a/include/stlsoft/string/copy_functions.hpp
+++ b/include/stlsoft/string/copy_functions.hpp
@@ -105,7 +105,6 @@ inline ss_size_t copy_contents(C *dest, ss_size_t cchDest, C const* src, ss_size
     }
     else
     {
-        typedef C                       char_t;
         typedef stlsoft_char_traits<C>  traits_t;
 
         const ss_size_t cchContent  =   (cchSource < cchDest) ? cchSource : cchDest;
diff --git a/include/stlsoft/conversion/byte_format_functions.hpp b/include/stlsoft/conversion/byte_format_functions.hpp
index a52f289..7508df4 100644
--- a/include/stlsoft/conversion/byte_format_functions.hpp
+++ b/include/stlsoft/conversion/byte_format_functions.hpp
@@ -307,7 +307,7 @@ inline ss_size_t format_bytes(  void con
                 }
 
 #if defined(STLSOFT_COMPILER_IS_GCC)
-                typedef unsigned        int8x_t;
+                typedef unsigned        int8x_t; sizeof(int8x_t);
 #else /* ? compiler */
                 typedef uint32_t        int8x_t;
 #endif /* compiler */
diff --git a/include/stlsoft/stlsoft.h b/include/stlsoft/stlsoft.h
index 6e339f7..c22977e 100644
--- a/include/stlsoft/stlsoft.h
+++ b/include/stlsoft/stlsoft.h
@@ -1354,7 +1354,7 @@
 #elif defined(STLSOFT_CF_STATIC_ASSERT_SUPPORT)
 # if defined(STLSOFT_COMPILER_IS_GCC) || \
       defined(STLSOFT_COMPILER_IS_INTEL)
-#  define STLSOFT_STATIC_ASSERT(ex)         do { typedef int ai[(ex) ? 1 : -1]; } while(0)
+#  define STLSOFT_STATIC_ASSERT(ex)         do { typedef int ai[(ex) ? 1 : -1]; sizeof(ai); } while(0)
 # else /* ? compiler */
 #  define STLSOFT_STATIC_ASSERT(ex)         do { typedef int ai[(ex) ? 1 : 0]; } while(0)
 # endif /* compiler */
